@model Factory.Cliente

@{
    ViewBag.Title = "Edit";
    SelectList selectLists = (SelectList)ViewBag.selectlist;

}

<h2>Editar cliente</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Identificacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Identificacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Identificacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdDepartamento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdDepartamento, selectLists, "Seleccione", new { @id = "IdDepartamento", @class = "form-control", @style = "width:100%;" })
                @Html.ValidationMessageFor(model => model.IdDepartamento, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IdCiudad , htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="IdCiudad" id="IdCiudad" class="form-control"></select>
                @Html.ValidationMessageFor(model => model.IdCiudad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaNacimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaNacimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaNacimento, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Actualizar" class="btn btn-success " />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar al listado", "Index", null, new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var base_url = window.location.origin + "/clientes";
        console.log($("#IdDepartamento").val());
        var idDepartamento = $("#IdDepartamento").val();
        cargarCiudad(idDepartamento);
        $("#IdDepartamento").change(function () {
            console.log(this.value)
            cargarCiudad(this.value);
        });
        $('input[type=datetime]').datepicker({
            dateFormat: "dd/MM/yy",
            changeMonth: true,
            changeYear: true,
            yearRange: "-60:+0"
        });
        function cargarCiudad(idDepartamento) {
            $.ajax({
                url: base_url + "/ListarMunicipios",
                type: "GET",
                dataType: "json",
                data: {
                    iddepartamento: idDepartamento
                },
                success: function (result) {
                    $("#IdCiudad").empty();
                    for (i = 0; i <= result.length - 1; i++) {
                        var option = document.createElement('option');
                        option.value = result[i].Id;
                        option.text = result[i].Nombre;
                        $("#IdCiudad").append(option);
                    }
                }
            });
        }
    </script>
}
